<UserControl x:Class="PrivCh.View.ContentShadowsocks"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:element="clr-namespace:PrivCh.ViewModel.Element">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="Button"
                   BasedOn="{StaticResource ButtonToolbar}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <ToolBarTray Grid.Row="0"
                     IsLocked="True">
            <ToolBar IsOverflowOpen="False"
                     VerticalAlignment="Center">
                <Button ToolTip="{StaticResource _save}"
                        Content="{md:PackIcon Kind=ContentSave}"
                        Command="{Binding Path=CommandSaveServer}" />

                <Separator />

                <Button ToolTip="{StaticResource add_server_qrcode}"
                        Content="{md:PackIcon Kind=QrcodeScan}"
                        Command="{Binding Path=CommandAddServerQRCode}" />

                <Button ToolTip="{StaticResource add_server_clipboard}"
                        Content="{md:PackIcon Kind=ClipboardTextOutline}"
                        Command="{Binding Path=CommandAddServerClipboard}" />

                <Button ToolTip="{StaticResource add_server_file}"
                        Content="{md:PackIcon Kind=FileDocumentBox}"
                        Command="{Binding Path=CommandAddServerFile}" />

                <Button ToolTip="{StaticResource add_server_create}"
                        Content="{md:PackIcon Kind=AddCircle}"
                        Command="{Binding Path=CommandAddServerCreate}" />

                <Separator />

                <Button ToolTip="{StaticResource task_update_info}"
                        Content="{md:PackIcon Kind=AddLocation}"
                        Command="{Binding Path=CommandUpdateInfoAll}" />

                <Button ToolTip="{StaticResource task_check_ping}"
                        Content="{md:PackIcon Kind=ChartAreaspline}"
                        Command="{Binding Path=CommandCheckPingAll}" />

                <CheckBox ToolBar.OverflowMode="Always"
                          Margin="20, 10"
                          Content="{StaticResource shadowsocks_enable_pool}"
                          IsChecked="{Binding Path=IsServerPoolEnabled}">
                </CheckBox>
            </ToolBar>
        </ToolBarTray>

        <!-- Server -->
        <DataGrid x:Name="xDataGrid"
                  Grid.Row="1"
                  GridLinesVisibility="Horizontal"
                  SelectionMode="Extended"
                  IsReadOnly="True"
                  CanUserDeleteRows="True"
                  CanUserSortColumns="True"
                  ItemsSource="{Binding Path=ShadowsocksOC}">
            <DataGrid.Resources>
                <element:CutoffConverter x:Key="Listening"
                                         Cutoff="0" />
            </DataGrid.Resources>

            <DataGrid.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick"
                              Command="{Binding Path=CommandChangeServer}"
                              CommandParameter="{Binding ElementName=xDataGrid, Path=SelectedItem}" />
                <KeyBinding Key="E"
                            Command="{Binding Path=CommandEditServer}"
                            CommandParameter="{Binding ElementName=xDataGrid, Path=SelectedItem}" />
                <KeyBinding Key="Delete"
                            Command="{Binding Path=CommandDeleteServers}"
                            CommandParameter="{Binding ElementName=xDataGrid, Path=SelectedItems}" />
            </DataGrid.InputBindings>

            <DataGrid.ContextMenu>
                <ContextMenu Background="{DynamicResource MaterialDesignBackground}">
                    <MenuItem Icon="{md:PackIcon Kind=Check}"
                              Header="{StaticResource server_menu_select}"
                              Command="{Binding Path=CommandChangeServer}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />

                    <MenuItem Icon="{md:PackIcon Kind=Edit}"
                              Header="{StaticResource server_menu_edit}"
                              Command="{Binding Path=CommandEditServer}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}" />

                    <MenuItem Icon="{md:PackIcon Kind=Delete}"
                              Header="{StaticResource server_menu_delete}"
                              Command="{Binding Path=CommandDeleteServers}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}" />

                    <Separator Margin="10, 0" />

                    <MenuItem Icon="{md:PackIcon Kind=AddLocation}"
                              Header="{StaticResource task_update_info}"
                              Command="{Binding Path=CommandUpdateInfoSelected}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}" />

                    <MenuItem Icon="{md:PackIcon Kind=ChartAreaspline}"
                              Header="{StaticResource task_check_ping}"
                              Command="{Binding Path=CommandCheckPingSelected}"
                              CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItems}" />
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>
                <DataGridTextColumn Width="Auto"
                                    Header="{StaticResource _name}"
                                    Binding="{Binding Path=FriendlyName}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ListenPort, Converter={StaticResource Listening}}"
                                             Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource PrimaryHueMidBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Width="Auto"
                                    Header="{StaticResource _ping}"
                                    Binding="{Binding Path=PingDelay}" />
                <DataGridTextColumn Width="Auto"
                                    Header="{StaticResource host_address}"
                                    Binding="{Binding Path=HostAddress}" />
                <DataGridTextColumn Width="Auto"
                                    Header="{StaticResource host_port}"
                                    Binding="{Binding Path=HostPort}" />
                <DataGridTextColumn Width="*"
                                    Header="{StaticResource _modified}"
                                    Binding="{Binding Path=Modified}" />
            </DataGrid.Columns>
        </DataGrid>

        <!-- Empty -->
        <Grid Grid.Row="1"
              Panel.ZIndex="1"
              VerticalAlignment="Center"
              HorizontalAlignment="Center">
            <TextBlock Margin="20"
                       Text="{StaticResource shadowsocks_no_data}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ShadowsocksOC.Count}"
                                         Value="0">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </Grid>
</UserControl>
